	-- 1) drop every table (in dependency order) if it exists
	BEGIN
	  EXECUTE IMMEDIATE 'DROP TABLE week_days CASCADE CONSTRAINTS PURGE';
	EXCEPTION WHEN OTHERS THEN
	  IF SQLCODE != -942 THEN RAISE; END IF;
	END;
	/

	BEGIN
	  EXECUTE IMMEDIATE 'DROP TABLE Project_time_sheets CASCADE CONSTRAINTS PURGE';
	EXCEPTION WHEN OTHERS THEN
	  IF SQLCODE != -942 THEN RAISE; END IF;
	END;
	/

	BEGIN
	  EXECUTE IMMEDIATE 'DROP TABLE Project_positions CASCADE CONSTRAINTS PURGE';
	EXCEPTION WHEN OTHERS THEN
	  IF SQLCODE != -942 THEN RAISE; END IF;
	END;
	/

	BEGIN
	  EXECUTE IMMEDIATE 'DROP TABLE Time_sheet CASCADE CONSTRAINTS PURGE';
	EXCEPTION WHEN OTHERS THEN
	  IF SQLCODE != -942 THEN RAISE; END IF;
	END;
	/

	BEGIN
	  EXECUTE IMMEDIATE 'DROP TABLE Project CASCADE CONSTRAINTS PURGE';
	EXCEPTION WHEN OTHERS THEN
	  IF SQLCODE != -942 THEN RAISE; END IF;
	END;
	/

	BEGIN
	  EXECUTE IMMEDIATE 'DROP TABLE Employee CASCADE CONSTRAINTS PURGE';
	EXCEPTION WHEN OTHERS THEN
	  IF SQLCODE != -942 THEN RAISE; END IF;
	END;
	/

	BEGIN
	  EXECUTE IMMEDIATE 'DROP TABLE Position CASCADE CONSTRAINTS PURGE';
	EXCEPTION WHEN OTHERS THEN
	  IF SQLCODE != -942 THEN RAISE; END IF;
	END;
	/

	-- Position Table
	CREATE TABLE Position (
	  Position_id NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
	  Position_name VARCHAR2(255) NOT NULL UNIQUE
	);

	-- Employee Table
	CREATE TABLE Employee (
	  Emp_id NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
	  Username VARCHAR2(255) NOT NULL,
	  Password VARCHAR2(255) NOT NULL,
	  First_Name VARCHAR2(255) NOT NULL,
	  Last_Name VARCHAR2(255) NOT NULL,
	  Email VARCHAR2(255) NOT NULL,
	  Role Varchar2(255) NOT NULL,
	  Status VARCHAR2(255) NOT NULL,
	  Position_id NUMBER,
	  FOREIGN KEY (Position_id) REFERENCES Position(Position_id)
	);

	-- Project Table
	CREATE TABLE Project (
	  Project_id NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
	  Project_name VARCHAR2(255) NOT NULL,
	  Project_Description VARCHAR2(255),
	  Emp_id NUMBER,
	  FOREIGN KEY (Emp_id) REFERENCES Employee(Emp_id)
	);

	-- Time_sheet Table
	CREATE TABLE Time_sheet (
	  Ts_id NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
	  Start_date DATE NOT NULL,
	  End_date DATE NOT NULL,
	  Ts_name VARCHAR2(255) NOT NULL,
	  Emp_id NUMBER,
	  FOREIGN KEY (Emp_id) REFERENCES Employee(Emp_id),
	  CONSTRAINT uq_timesheet_emp_dates UNIQUE (Emp_id, Start_date, End_date)
	);

	-- Project_positions Table
	CREATE TABLE Project_positions (
	  Id NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
	  Project_id NUMBER NOT NULL,
	  Position_id NUMBER NOT NULL,
	  hours_budget INT NOT NULL,
	  FOREIGN KEY (Project_id) REFERENCES Project(Project_id),
	  FOREIGN KEY (Position_id) REFERENCES Position(Position_id),
	  CONSTRAINT uq_proj_pos UNIQUE (Project_id, Position_id)
	);

	-- Project_time_sheets Table
	CREATE TABLE Project_time_sheets (
	  Id NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
	  ts_id NUMBER NOT NULL,
	  project_id NUMBER NOT NULL,
	  FOREIGN KEY (ts_id) REFERENCES Time_sheet(Ts_id),
	  FOREIGN KEY (project_id) REFERENCES Project(Project_id),
	  CONSTRAINT uq_ts_project UNIQUE (ts_id, project_id)
	);

	-- week_days Table
	CREATE TABLE week_days (
	  id NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
	  day_date DATE NOT NULL,
	  hours INT NOT NULL,
	  Project_ts_id NUMBER NOT NULL,
	  day_name VARCHAR2(255) NOT NULL,
	  FOREIGN KEY (Project_ts_id) REFERENCES Project_time_sheets(Id),
	  CONSTRAINT uq_weekday_projdate UNIQUE (Project_ts_id, day_date)
	);
